// Code generated by protoc-gen-go. DO NOT EDIT.
// source: user.proto

package com_ta04_srv_user

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

import (
	client "github.com/micro/go-micro/client"
	server "github.com/micro/go-micro/server"
	context "golang.org/x/net/context"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type User struct {
	Id                   int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	FirstName            string   `protobuf:"bytes,2,opt,name=first_name,json=firstName,proto3" json:"first_name,omitempty"`
	LastName             string   `protobuf:"bytes,3,opt,name=last_name,json=lastName,proto3" json:"last_name,omitempty"`
	Username             string   `protobuf:"bytes,4,opt,name=username,proto3" json:"username,omitempty"`
	Password             int32    `protobuf:"varint,5,opt,name=password,proto3" json:"password,omitempty"`
	PrimeNumber          int32    `protobuf:"varint,6,opt,name=prime_number,json=primeNumber,proto3" json:"prime_number,omitempty"`
	GeneratorValue       int32    `protobuf:"varint,7,opt,name=generator_value,json=generatorValue,proto3" json:"generator_value,omitempty"`
	EmailAddress         string   `protobuf:"bytes,8,opt,name=email_address,json=emailAddress,proto3" json:"email_address,omitempty"`
	PhoneNumber          string   `protobuf:"bytes,9,opt,name=phone_number,json=phoneNumber,proto3" json:"phone_number,omitempty"`
	DateOfBirth          string   `protobuf:"bytes,10,opt,name=date_of_birth,json=dateOfBirth,proto3" json:"date_of_birth,omitempty"`
	Address              string   `protobuf:"bytes,11,opt,name=address,proto3" json:"address,omitempty"`
	Role                 string   `protobuf:"bytes,12,opt,name=role,proto3" json:"role,omitempty"`
	Status               string   `protobuf:"bytes,13,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *User) Reset()         { *m = User{} }
func (m *User) String() string { return proto.CompactTextString(m) }
func (*User) ProtoMessage()    {}
func (*User) Descriptor() ([]byte, []int) {
	return fileDescriptor_116e343673f7ffaf, []int{0}
}

func (m *User) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_User.Unmarshal(m, b)
}
func (m *User) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_User.Marshal(b, m, deterministic)
}
func (m *User) XXX_Merge(src proto.Message) {
	xxx_messageInfo_User.Merge(m, src)
}
func (m *User) XXX_Size() int {
	return xxx_messageInfo_User.Size(m)
}
func (m *User) XXX_DiscardUnknown() {
	xxx_messageInfo_User.DiscardUnknown(m)
}

var xxx_messageInfo_User proto.InternalMessageInfo

func (m *User) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *User) GetFirstName() string {
	if m != nil {
		return m.FirstName
	}
	return ""
}

func (m *User) GetLastName() string {
	if m != nil {
		return m.LastName
	}
	return ""
}

func (m *User) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *User) GetPassword() int32 {
	if m != nil {
		return m.Password
	}
	return 0
}

func (m *User) GetPrimeNumber() int32 {
	if m != nil {
		return m.PrimeNumber
	}
	return 0
}

func (m *User) GetGeneratorValue() int32 {
	if m != nil {
		return m.GeneratorValue
	}
	return 0
}

func (m *User) GetEmailAddress() string {
	if m != nil {
		return m.EmailAddress
	}
	return ""
}

func (m *User) GetPhoneNumber() string {
	if m != nil {
		return m.PhoneNumber
	}
	return ""
}

func (m *User) GetDateOfBirth() string {
	if m != nil {
		return m.DateOfBirth
	}
	return ""
}

func (m *User) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *User) GetRole() string {
	if m != nil {
		return m.Role
	}
	return ""
}

func (m *User) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

type IndexUsersRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IndexUsersRequest) Reset()         { *m = IndexUsersRequest{} }
func (m *IndexUsersRequest) String() string { return proto.CompactTextString(m) }
func (*IndexUsersRequest) ProtoMessage()    {}
func (*IndexUsersRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_116e343673f7ffaf, []int{1}
}

func (m *IndexUsersRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IndexUsersRequest.Unmarshal(m, b)
}
func (m *IndexUsersRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IndexUsersRequest.Marshal(b, m, deterministic)
}
func (m *IndexUsersRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IndexUsersRequest.Merge(m, src)
}
func (m *IndexUsersRequest) XXX_Size() int {
	return xxx_messageInfo_IndexUsersRequest.Size(m)
}
func (m *IndexUsersRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_IndexUsersRequest.DiscardUnknown(m)
}

var xxx_messageInfo_IndexUsersRequest proto.InternalMessageInfo

type Response struct {
	User                 *User    `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	Users                []*User  `protobuf:"bytes,2,rep,name=users,proto3" json:"users,omitempty"`
	Error                *Error   `protobuf:"bytes,3,opt,name=error,proto3" json:"error,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Response) Reset()         { *m = Response{} }
func (m *Response) String() string { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()    {}
func (*Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_116e343673f7ffaf, []int{2}
}

func (m *Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Response.Unmarshal(m, b)
}
func (m *Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Response.Marshal(b, m, deterministic)
}
func (m *Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Response.Merge(m, src)
}
func (m *Response) XXX_Size() int {
	return xxx_messageInfo_Response.Size(m)
}
func (m *Response) XXX_DiscardUnknown() {
	xxx_messageInfo_Response.DiscardUnknown(m)
}

var xxx_messageInfo_Response proto.InternalMessageInfo

func (m *Response) GetUser() *User {
	if m != nil {
		return m.User
	}
	return nil
}

func (m *Response) GetUsers() []*User {
	if m != nil {
		return m.Users
	}
	return nil
}

func (m *Response) GetError() *Error {
	if m != nil {
		return m.Error
	}
	return nil
}

type Error struct {
	Code                 string   `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Error) Reset()         { *m = Error{} }
func (m *Error) String() string { return proto.CompactTextString(m) }
func (*Error) ProtoMessage()    {}
func (*Error) Descriptor() ([]byte, []int) {
	return fileDescriptor_116e343673f7ffaf, []int{3}
}

func (m *Error) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Error.Unmarshal(m, b)
}
func (m *Error) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Error.Marshal(b, m, deterministic)
}
func (m *Error) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Error.Merge(m, src)
}
func (m *Error) XXX_Size() int {
	return xxx_messageInfo_Error.Size(m)
}
func (m *Error) XXX_DiscardUnknown() {
	xxx_messageInfo_Error.DiscardUnknown(m)
}

var xxx_messageInfo_Error proto.InternalMessageInfo

func (m *Error) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *Error) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func init() {
	proto.RegisterType((*User)(nil), "com.ta04.srv.user.User")
	proto.RegisterType((*IndexUsersRequest)(nil), "com.ta04.srv.user.IndexUsersRequest")
	proto.RegisterType((*Response)(nil), "com.ta04.srv.user.Response")
	proto.RegisterType((*Error)(nil), "com.ta04.srv.user.Error")
}

func init() {
	proto.RegisterFile("user.proto", fileDescriptor_116e343673f7ffaf)
}

var fileDescriptor_116e343673f7ffaf = []byte{
	// 499 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x54, 0x5d, 0x6b, 0x13, 0x41,
	0x14, 0x35, 0x69, 0x92, 0x66, 0xef, 0x26, 0x95, 0x8e, 0xa0, 0x43, 0x4b, 0x21, 0xae, 0x82, 0x05,
	0x71, 0x91, 0xa8, 0x3f, 0xc0, 0xb4, 0x7d, 0x10, 0xa4, 0xe2, 0x86, 0xe8, 0xe3, 0x32, 0xc9, 0xde,
	0x34, 0x0b, 0xd9, 0x9d, 0x78, 0x67, 0x36, 0xb5, 0xff, 0xc0, 0x5f, 0xe0, 0x9b, 0xff, 0x55, 0xe6,
	0x6e, 0x27, 0x3e, 0x34, 0x2a, 0x18, 0x9f, 0xb2, 0xf7, 0x9c, 0x93, 0x73, 0xf6, 0x7e, 0xb0, 0x00,
	0x95, 0x41, 0x8a, 0x57, 0xa4, 0xad, 0x16, 0x87, 0x33, 0x5d, 0xc4, 0x56, 0xbd, 0x7c, 0x1d, 0x1b,
	0x5a, 0xc7, 0x8e, 0x88, 0xbe, 0xed, 0x41, 0x6b, 0x62, 0x90, 0xc4, 0x01, 0x34, 0xf3, 0x4c, 0x36,
	0x06, 0x8d, 0xd3, 0x76, 0xd2, 0xcc, 0x33, 0x71, 0x02, 0x30, 0xcf, 0xc9, 0xd8, 0xb4, 0x54, 0x05,
	0xca, 0xe6, 0xa0, 0x71, 0x1a, 0x24, 0x01, 0x23, 0x97, 0xaa, 0x40, 0x71, 0x0c, 0xc1, 0x52, 0x79,
	0x76, 0x8f, 0xd9, 0xae, 0x03, 0x98, 0x3c, 0x82, 0xae, 0x33, 0x67, 0xae, 0x55, 0x73, 0xbe, 0x76,
	0xdc, 0x4a, 0x19, 0x73, 0xad, 0x29, 0x93, 0x6d, 0x4e, 0xdb, 0xd4, 0xe2, 0x31, 0xf4, 0x56, 0x94,
	0x17, 0x98, 0x96, 0x55, 0x31, 0x45, 0x92, 0x1d, 0xe6, 0x43, 0xc6, 0x2e, 0x19, 0x12, 0xcf, 0xe0,
	0xfe, 0x15, 0x96, 0x48, 0xca, 0x6a, 0x4a, 0xd7, 0x6a, 0x59, 0xa1, 0xdc, 0x67, 0xd5, 0xc1, 0x06,
	0xfe, 0xe4, 0x50, 0xf1, 0x04, 0xfa, 0x58, 0xa8, 0x7c, 0x99, 0xaa, 0x2c, 0x23, 0x34, 0x46, 0x76,
	0xf9, 0x45, 0x7a, 0x0c, 0xbe, 0xad, 0x31, 0x0e, 0x5c, 0xe8, 0x72, 0x13, 0x18, 0xb0, 0x26, 0x64,
	0xec, 0x36, 0x30, 0x82, 0x7e, 0xa6, 0x2c, 0xa6, 0x7a, 0x9e, 0x4e, 0x73, 0xb2, 0x0b, 0x09, 0xb5,
	0xc6, 0x81, 0x1f, 0xe6, 0x23, 0x07, 0x09, 0x09, 0xfb, 0x3e, 0x25, 0x64, 0xd6, 0x97, 0x42, 0x40,
	0x8b, 0xf4, 0x12, 0x65, 0x8f, 0x61, 0x7e, 0x16, 0x0f, 0xa1, 0x63, 0xac, 0xb2, 0x95, 0x91, 0x7d,
	0x46, 0x6f, 0xab, 0xe8, 0x01, 0x1c, 0xbe, 0x2b, 0x33, 0xfc, 0xea, 0xd6, 0x61, 0x12, 0xfc, 0x52,
	0xa1, 0xb1, 0xd1, 0xf7, 0x06, 0x74, 0x13, 0x34, 0x2b, 0x5d, 0x1a, 0x14, 0xcf, 0xa1, 0xe5, 0xe6,
	0xc8, 0x5b, 0x0a, 0x87, 0x8f, 0xe2, 0x3b, 0xeb, 0x8c, 0xdd, 0x7f, 0x13, 0x16, 0x89, 0x17, 0xd0,
	0x76, 0xbf, 0x46, 0x36, 0x07, 0x7b, 0x7f, 0x52, 0xd7, 0x2a, 0x11, 0x43, 0x1b, 0x89, 0x34, 0xf1,
	0x32, 0xc3, 0xa1, 0xdc, 0x22, 0xbf, 0x70, 0x7c, 0x52, 0xcb, 0xa2, 0x37, 0xd0, 0xe6, 0xda, 0xb5,
	0x38, 0xd3, 0x19, 0xf2, 0x4b, 0x05, 0x09, 0x3f, 0xbb, 0x81, 0x14, 0x68, 0x8c, 0xba, 0xf2, 0x97,
	0xe3, 0xcb, 0xe1, 0x8f, 0x16, 0x84, 0x2e, 0x76, 0x8c, 0xb4, 0xce, 0x67, 0x28, 0x3e, 0x02, 0xfc,
	0x6a, 0x5a, 0x3c, 0xdd, 0x92, 0x7a, 0x67, 0x26, 0x47, 0xc7, 0x5b, 0x54, 0x7e, 0x46, 0xd1, 0x3d,
	0x31, 0x82, 0xee, 0x78, 0xa1, 0xaf, 0xf9, 0xaa, 0x7f, 0xd7, 0xf5, 0xdf, 0x3c, 0xde, 0x83, 0xf0,
	0x1e, 0xa3, 0x9b, 0x89, 0xbf, 0xdd, 0x7f, 0x75, 0xfb, 0x0c, 0x27, 0xde, 0xed, 0x8c, 0x30, 0xc3,
	0xd2, 0xe6, 0x6a, 0x69, 0xfe, 0x83, 0xf1, 0x19, 0x04, 0x63, 0xab, 0x09, 0x77, 0xea, 0xf5, 0x1c,
	0x60, 0xb2, 0x72, 0xe7, 0xbc, 0x93, 0xcb, 0x05, 0x84, 0xe7, 0x68, 0x2c, 0xe9, 0x9b, 0x5d, 0x6c,
	0xa6, 0x1d, 0xfe, 0x52, 0xbd, 0xfa, 0x19, 0x00, 0x00, 0xff, 0xff, 0x2b, 0xff, 0x46, 0x96, 0xb7,
	0x04, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ client.Option
var _ server.Option

// Client API for UserService service

type UserServiceClient interface {
	IndexUsers(ctx context.Context, in *IndexUsersRequest, opts ...client.CallOption) (*Response, error)
	ShowUser(ctx context.Context, in *User, opts ...client.CallOption) (*Response, error)
	ShowUserByUsername(ctx context.Context, in *User, opts ...client.CallOption) (*Response, error)
	ShowUserCredentialsByUsername(ctx context.Context, in *User, opts ...client.CallOption) (*Response, error)
	StoreUser(ctx context.Context, in *User, opts ...client.CallOption) (*Response, error)
	UpdateUser(ctx context.Context, in *User, opts ...client.CallOption) (*Response, error)
	DestroyUser(ctx context.Context, in *User, opts ...client.CallOption) (*Response, error)
}

type userServiceClient struct {
	c           client.Client
	serviceName string
}

func NewUserServiceClient(serviceName string, c client.Client) UserServiceClient {
	if c == nil {
		c = client.NewClient()
	}
	if len(serviceName) == 0 {
		serviceName = "com.ta04.srv.user"
	}
	return &userServiceClient{
		c:           c,
		serviceName: serviceName,
	}
}

func (c *userServiceClient) IndexUsers(ctx context.Context, in *IndexUsersRequest, opts ...client.CallOption) (*Response, error) {
	req := c.c.NewRequest(c.serviceName, "UserService.IndexUsers", in)
	out := new(Response)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) ShowUser(ctx context.Context, in *User, opts ...client.CallOption) (*Response, error) {
	req := c.c.NewRequest(c.serviceName, "UserService.ShowUser", in)
	out := new(Response)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) ShowUserByUsername(ctx context.Context, in *User, opts ...client.CallOption) (*Response, error) {
	req := c.c.NewRequest(c.serviceName, "UserService.ShowUserByUsername", in)
	out := new(Response)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) ShowUserCredentialsByUsername(ctx context.Context, in *User, opts ...client.CallOption) (*Response, error) {
	req := c.c.NewRequest(c.serviceName, "UserService.ShowUserCredentialsByUsername", in)
	out := new(Response)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) StoreUser(ctx context.Context, in *User, opts ...client.CallOption) (*Response, error) {
	req := c.c.NewRequest(c.serviceName, "UserService.StoreUser", in)
	out := new(Response)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) UpdateUser(ctx context.Context, in *User, opts ...client.CallOption) (*Response, error) {
	req := c.c.NewRequest(c.serviceName, "UserService.UpdateUser", in)
	out := new(Response)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) DestroyUser(ctx context.Context, in *User, opts ...client.CallOption) (*Response, error) {
	req := c.c.NewRequest(c.serviceName, "UserService.DestroyUser", in)
	out := new(Response)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for UserService service

type UserServiceHandler interface {
	IndexUsers(context.Context, *IndexUsersRequest, *Response) error
	ShowUser(context.Context, *User, *Response) error
	ShowUserByUsername(context.Context, *User, *Response) error
	ShowUserCredentialsByUsername(context.Context, *User, *Response) error
	StoreUser(context.Context, *User, *Response) error
	UpdateUser(context.Context, *User, *Response) error
	DestroyUser(context.Context, *User, *Response) error
}

func RegisterUserServiceHandler(s server.Server, hdlr UserServiceHandler, opts ...server.HandlerOption) {
	s.Handle(s.NewHandler(&UserService{hdlr}, opts...))
}

type UserService struct {
	UserServiceHandler
}

func (h *UserService) IndexUsers(ctx context.Context, in *IndexUsersRequest, out *Response) error {
	return h.UserServiceHandler.IndexUsers(ctx, in, out)
}

func (h *UserService) ShowUser(ctx context.Context, in *User, out *Response) error {
	return h.UserServiceHandler.ShowUser(ctx, in, out)
}

func (h *UserService) ShowUserByUsername(ctx context.Context, in *User, out *Response) error {
	return h.UserServiceHandler.ShowUserByUsername(ctx, in, out)
}

func (h *UserService) ShowUserCredentialsByUsername(ctx context.Context, in *User, out *Response) error {
	return h.UserServiceHandler.ShowUserCredentialsByUsername(ctx, in, out)
}

func (h *UserService) StoreUser(ctx context.Context, in *User, out *Response) error {
	return h.UserServiceHandler.StoreUser(ctx, in, out)
}

func (h *UserService) UpdateUser(ctx context.Context, in *User, out *Response) error {
	return h.UserServiceHandler.UpdateUser(ctx, in, out)
}

func (h *UserService) DestroyUser(ctx context.Context, in *User, out *Response) error {
	return h.UserServiceHandler.DestroyUser(ctx, in, out)
}
